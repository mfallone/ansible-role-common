---
# file: ansible-role-common/tasks/push-sshd_config.yaml

- name: Find Connected Client IP 
  become: false
  debug:
    msg: "{{ ansible_env.SSH_CLIENT.split(' ') | first }}"
    verbosity: 2
  register: local_ip_addr

- debug: 
    msg: "{{ local_ip_addr }}"
    verbosity: 2

- name: Push sshd_config
  become: true
  template:
    src: "{{ sshd_config_template }}" 
    dest: "{{ sshd_config_new_file }}"
    backup: yes
    validate: "{{ sshd_binary }} -t -f %s"
  register: sshd_config_test
  when: (ansible_facts['distribution'] == "Debian") or 
        (ansible_facts['distribution'] == "Ubuntu")

- name: Push (CentOS) sshd_config
  become: true
  template:
    src: "{{ centos_sshd_config_template }}" 
    dest: "{{ sshd_config_new_file }}"
    backup: yes
    validate: "{{ sshd_binary }} -t -f %s"
  register: sshd_config_test
  when:
    - ansible_facts['distribution'] == "CentOS"
    - ansible_facts['distribution_major_version'] == "7"

- debug: 
    msg: "{{ sshd_config_test }}"
    verbosity: 2

- name: Check for original sshd_config file
  stat:
    path: "{{ sshd_config_original }}"
  register: sshd_config_backup_exists

- debug: 
    msg: "{{ sshd_config_backup_exists }}"
    verbosity: 2

- name: Backup sshd_config
  command: "mv {{ sshd_config_file }} {{ sshd_config_original }}"
  when: sshd_config_backup_exists.stat.exists == False
  become: true

- name: Link sshd_config
  file:
    src: "{{ sshd_config_new_file }}"
    dest: "{{ sshd_config_file }}"
    state: link
  become: true
  notify:
    - restart ssh
